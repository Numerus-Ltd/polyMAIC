limits=c(0, xmax ),
expand=c(0 ,0)) +
scale_y_continuous(breaks=seq(0, ymax, ystep()),
limits=c(0, ymax + ystep() / 10),
expand=c(0 ,0)) +
guides(color = guide_legend(nrow = length('TRT'),
byrow = TRUE,
override.aes = list(shape = c(rep(NA, length('TRT'))),
linetype = c(rep("solid", length('TRT'))))),
shape = guide_legend()) +
labs(x=xlab,
y=ylab)
ggplot(data = data, mapping = aes(x=!!sym(x1), y=!!sym(y1), color=!!sym(color),
shape=interaction('TRT', 'CNSR')),  linewidth = 1) +
geom_step(linewidth=1)
ggplot(data = data, mapping = aes(x=!!sym(x1), y=!!sym(y1), color=!!sym(color),
shape=interaction('TRT', 'CNSR')),  linewidth = 1) +
geom_step(linewidth=1) +
geom_point(data = subset(data, CNSR==1), size=3)
ggplot(data = data, mapping = aes(x=!!sym(x1), y=!!sym(y1), color=!!sym(color),
shape=interaction('TRT', 'CNSR')),  linewidth = 1) +
geom_step(linewidth=1) +
geom_point(data = subset(data, CNSR==1), size=3) +
theme_num() %+replace%
theme(axis.text.y  = element_text(size=16,family = "mono"),
axis.text.x  = element_text(size=16,family = "mono"),#convert inches to pt (5 * 72.27 / 25.4 = 14.2....)
axis.title = element_text(size=16, family = "mono"),
legend.text = element_text(family = "mono", size = 16),
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))
ggplot(data = data, mapping = aes(x=!!sym(x1), y=!!sym(y1), color=!!sym(color),
shape=interaction('TRT', 'CNSR')),  linewidth = 1) +
geom_step(linewidth=1) +
geom_point(data = subset(data, CNSR==1), size=3) +
theme_num() %+replace%
theme(axis.text.y  = element_text(size=16,family = "mono"),
axis.text.x  = element_text(size=16,family = "mono"),#convert inches to pt (5 * 72.27 / 25.4 = 14.2....)
axis.title = element_text(size=16, family = "mono"),
legend.text = element_text(family = "mono", size = 16),
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm")) +
scale_color_manual(values=c('#CB2C31', '#2986cc', '#12AF83', '#FFC663', '#A791BF')) +
scale_shape_manual(values = c(3), labels=c('Censored'))
ggplot(data = data, mapping = aes(x=!!sym(x1), y=!!sym(y1), color=!!sym(color),
shape=interaction('TRT', 'CNSR')),  linewidth = 1) +
geom_step(linewidth=1) +
geom_point(data = subset(data, CNSR==1), size=3) +
theme_num() %+replace%
theme(axis.text.y  = element_text(size=16,family = "mono"),
axis.text.x  = element_text(size=16,family = "mono"),#convert inches to pt (5 * 72.27 / 25.4 = 14.2....)
axis.title = element_text(size=16, family = "mono"),
legend.text = element_text(family = "mono", size = 16),
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm")) +
scale_color_manual(values=c('#CB2C31', '#2986cc', '#12AF83', '#FFC663', '#A791BF')) +
scale_shape_manual(values = c(3), labels=c('Censored'))+
scale_x_continuous(breaks = xbreaks ,
limits=c(0, xmax ),
expand=c(0 ,0))
View(xbreaks)
xbreaks <- unique(c(0, unique(temp[,x1]), xmax ))
(0, unique(temp[,x1]), xmax )
c(0, unique(temp[,x1]), xmax )
data %>% filter(!is.na(data[,label]))
temp <- data %>% filter(!is.na(data[,label]))
View(data)
#Load in SAS data sets
df <- read_sas(paste(directory, 'Sim Data/', 'outsim_survival.sas7bdat', sep=""))
df <- df %>% mutate(N_ATRISK = ifelse(!is.na(SURV_ESTIMATE), "X", N_Atrisk ),
HAZARD_RATIO = NA ,
HAZARD_RATIO_LCL =  NA ,
HAZARD_RATIO_UCL = NA ,
HAZARD_RATIO_PVAL = NA ) %>%
select(-N_Atrisk)
View(df)
#Prep data for usage (data must be sorted correctly for fill)
surv <- df %>% tidyr::fill(SURV_ESTIMATE, SURV_LCL, SURV_UCL) %>%
mutate(across(c(SURV_ESTIMATE, SURV_LCL, SURV_UCL), list(function(x){x/max(x)})))
#Load in SAS data sets
df <- read_sas(paste(directory, 'Sim Data/', 'outsim_survival.sas7bdat', sep=""))
df <- df %>% mutate(#N_ATRISK = ifelse(!is.na(SURV_ESTIMATE), "X", N_Atrisk ),
HAZARD_RATIO = NA ,
HAZARD_RATIO_LCL =  NA ,
HAZARD_RATIO_UCL = NA ,
HAZARD_RATIO_PVAL = NA )
#Prep data for usage (data must be sorted correctly for fill)
surv <- df %>% tidyr::fill(SURV_ESTIMATE, SURV_LCL, SURV_UCL) %>%
mutate(across(c(SURV_ESTIMATE, SURV_LCL, SURV_UCL), list(function(x){x/max(x)})))
overall <- surv %>% filter(SUBGRP == "OVERALL")
strata1 <- 'Active'
strata2 <- 'Control'
strata3 <- ''
strata4 <- ''
strata5 <- ''
xlab <- "Time (Months)"
ylab <- "Time to first PSA â‰¤0.02 ng/ml"
km.plot <- KAPLANMEIER(data= overall,
dtab = NULL,
x1='TIME',
y1='SURV_ESTIMATE',
ymin='SURV_LCL',
ymax='SURV_UCL',
x2='TIME',
y2='TRT',
label='N_ATRISK',
color='TRT',
rcol=F,
cnsr=T,
percent= T,
risk=T,
confint=F,
med=F,
an.tab = F
)
km.plot <- KAPLANMEIER(data= overall,
